name: Terraform

on:
  pull_request:
    branches: [ master ]
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.terraform.lock.hcl'
  push:
    branches: [ master ]
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '.terraform.lock.hcl'

env:
  TF_WORKING_DIR: .           # <-- CHANGE if your root TF lives elsewhere (e.g., infra/prod)
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: true
  TF_INPUT: 0

permissions:
  id-token: write             # needed for OIDC
  contents: read
  pull-requests: write

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::697624189101:role/<GitHubOIDCRole>   # <-- update
          aws-region: ${{ env.AWS_REGION }}

      - name: Show working directory
        run: |
          echo "PWD: $(pwd)"
          ls -la

      - name: Cache Terraform providers
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_WORKING_DIR }}/.terraform
            ${{ env.TF_WORKING_DIR }}/.terraform.lock.hcl
          key: ${{ runner.os }}-tf-${{ hashFiles(format('{0}/**/*.tf', env.TF_WORKING_DIR)) }}-${{ hashFiles(format('{0}/.terraform.lock.hcl', env.TF_WORKING_DIR)) }}

      - name: Terraform Fmt (check)
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -reconfigure -input=false

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -no-color -lock-timeout=5m -out=tfplan

      - name: Save plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

      - name: Summarize plan
        run: |
          terraform show -no-color tfplan > plan.txt
          echo '### Terraform Plan' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          sed -n '1,200p' plan.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment: production        # optional: require manual approval in repo settings
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::697624189101:role/<GitHubOIDCRole>   # <-- update
          aws-region: ${{ env.AWS_REGION }}

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_WORKING_DIR }}/.terraform
            ${{ env.TF_WORKING_DIR }}/.terraform.lock.hcl
          key: ${{ runner.os }}-tf-${{ hashFiles(format('{0}/**/*.tf', env.TF_WORKING_DIR)) }}-${{ hashFiles(format('{0}/.terraform.lock.hcl', env.TF_WORKING_DIR)) }}

      - name: Terraform Init
        run: terraform init -reconfigure -input=false

      - name: Terraform Plan (for record)
        run: terraform plan -no-color -lock-timeout=5m -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false tfplan
